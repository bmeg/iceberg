$id: DocumentReference
additionalProperties: false
description: "A reference to a document. A reference to a document of any kind for\
  \ any purpose. While the term \u201Cdocument\u201D implies a more narrow focus,\
  \ for this resource this \"document\" encompasses *any* serialized object with a\
  \ mime-type, it includes formal patient-centric documents (CDA), clinical notes,\
  \ scanned paper, non-patient specific documents like policy text, as well as a photo,\
  \ video, or audio recording acquired or used in healthcare.  The DocumentReference\
  \ resource provides metadata about the document so that the document can be discovered\
  \ and managed.  The actual content may be inline base64 encoded data or provided\
  \ by direct reference. [See https://hl7.org/fhir/R5/DocumentReference.html]"
links:
- href: '{id}'
  rel: author_Practitioner
  targetHints:
    backref:
    - author_document_reference
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /author/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: author_PractitionerRole
  targetHints:
    backref:
    - author_document_reference
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /author/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: author_Organization
  targetHints:
    backref:
    - author_document_reference
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /author/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: author_Patient
  targetHints:
    backref:
    - author_document_reference
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /author/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: basedOn_MedicationRequest
  targetHints:
    backref:
    - basedOn_document_reference
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - MedicationRequest/*
  targetSchema:
    $ref: MedicationRequest.yaml
  templatePointers:
    id: /basedOn/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: custodian
  targetHints:
    backref:
    - custodian_document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /custodian/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Organization
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Group
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Practitioner
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_PractitionerRole
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_ResearchStudy
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchStudy/*
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Patient
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_ResearchSubject
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchSubject/*
  targetSchema:
    $ref: ResearchSubject.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Substance
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Substance/*
  targetSchema:
    $ref: Substance.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_SubstanceDefinition
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - SubstanceDefinition/*
  targetSchema:
    $ref: SubstanceDefinition.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Specimen
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Observation
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Observation/*
  targetSchema:
    $ref: Observation.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_DiagnosticReport
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DiagnosticReport/*
  targetSchema:
    $ref: DiagnosticReport.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Condition
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Condition/*
  targetSchema:
    $ref: Condition.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Medication
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Medication/*
  targetSchema:
    $ref: Medication.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_MedicationAdministration
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationAdministration/*
  targetSchema:
    $ref: MedicationAdministration.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_MedicationStatement
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationStatement/*
  targetSchema:
    $ref: MedicationStatement.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_MedicationRequest
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationRequest/*
  targetSchema:
    $ref: MedicationRequest.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Procedure
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Procedure/*
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_DocumentReference
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DocumentReference/*
  targetSchema:
    $ref: DocumentReference.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Task
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Task/*
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_ImagingStudy
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ImagingStudy/*
  targetSchema:
    $ref: ImagingStudy.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_FamilyMemberHistory
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - FamilyMemberHistory/*
  targetSchema:
    $ref: FamilyMemberHistory.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_BodyStructure
  targetHints:
    backref:
    - document_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - BodyStructure/*
  targetSchema:
    $ref: BodyStructure.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- $comment: From DocumentReferenceAttester/attester
  href: '{id}'
  rel: attester_party_Patient
  targetHints:
    backref:
    - document_reference_attester
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /attester/-/party/reference
  templateRequired:
  - id
- $comment: From DocumentReferenceAttester/attester
  href: '{id}'
  rel: attester_party_Practitioner
  targetHints:
    backref:
    - document_reference_attester
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /attester/-/party/reference
  templateRequired:
  - id
- $comment: From DocumentReferenceAttester/attester
  href: '{id}'
  rel: attester_party_PractitionerRole
  targetHints:
    backref:
    - document_reference_attester
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /attester/-/party/reference
  templateRequired:
  - id
- $comment: From DocumentReferenceAttester/attester
  href: '{id}'
  rel: attester_party_Organization
  targetHints:
    backref:
    - document_reference_attester
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /attester/-/party/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Organization
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Group
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Practitioner
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_PractitionerRole
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_ResearchStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchStudy/*
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Patient
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_ResearchSubject
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchSubject/*
  targetSchema:
    $ref: ResearchSubject.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Substance
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Substance/*
  targetSchema:
    $ref: Substance.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_SubstanceDefinition
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - SubstanceDefinition/*
  targetSchema:
    $ref: SubstanceDefinition.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Specimen
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Observation
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Observation/*
  targetSchema:
    $ref: Observation.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_DiagnosticReport
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DiagnosticReport/*
  targetSchema:
    $ref: DiagnosticReport.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Condition
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Condition/*
  targetSchema:
    $ref: Condition.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Medication
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Medication/*
  targetSchema:
    $ref: Medication.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_MedicationAdministration
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationAdministration/*
  targetSchema:
    $ref: MedicationAdministration.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_MedicationStatement
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationStatement/*
  targetSchema:
    $ref: MedicationStatement.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_MedicationRequest
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationRequest/*
  targetSchema:
    $ref: MedicationRequest.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Procedure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Procedure/*
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_DocumentReference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DocumentReference/*
  targetSchema:
    $ref: DocumentReference.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_Task
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Task/*
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_ImagingStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ImagingStudy/*
  targetSchema:
    $ref: ImagingStudy.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_FamilyMemberHistory
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - FamilyMemberHistory/*
  targetSchema:
    $ref: FamilyMemberHistory.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/bodySite
  href: '{id}'
  rel: bodySite_reference_BodyStructure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - BodyStructure/*
  targetSchema:
    $ref: BodyStructure.yaml
  templatePointers:
    id: /bodySite/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Organization
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Group
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Practitioner
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_PractitionerRole
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_ResearchStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchStudy/*
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Patient
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_ResearchSubject
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchSubject/*
  targetSchema:
    $ref: ResearchSubject.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Substance
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Substance/*
  targetSchema:
    $ref: Substance.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_SubstanceDefinition
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - SubstanceDefinition/*
  targetSchema:
    $ref: SubstanceDefinition.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Specimen
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Observation
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Observation/*
  targetSchema:
    $ref: Observation.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_DiagnosticReport
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DiagnosticReport/*
  targetSchema:
    $ref: DiagnosticReport.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Condition
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Condition/*
  targetSchema:
    $ref: Condition.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Medication
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Medication/*
  targetSchema:
    $ref: Medication.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_MedicationAdministration
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationAdministration/*
  targetSchema:
    $ref: MedicationAdministration.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_MedicationStatement
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationStatement/*
  targetSchema:
    $ref: MedicationStatement.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_MedicationRequest
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationRequest/*
  targetSchema:
    $ref: MedicationRequest.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Procedure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Procedure/*
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_DocumentReference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DocumentReference/*
  targetSchema:
    $ref: DocumentReference.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_Task
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Task/*
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_ImagingStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ImagingStudy/*
  targetSchema:
    $ref: ImagingStudy.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_FamilyMemberHistory
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - FamilyMemberHistory/*
  targetSchema:
    $ref: FamilyMemberHistory.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/event
  href: '{id}'
  rel: event_reference_BodyStructure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - BodyStructure/*
  targetSchema:
    $ref: BodyStructure.yaml
  templatePointers:
    id: /event/-/reference/reference
  templateRequired:
  - id
- $comment: From DocumentReferenceRelatesTo/relatesTo
  href: '{id}'
  rel: relatesTo_target
  targetHints:
    backref:
    - document_reference_relates_to
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DocumentReference/*
  targetSchema:
    $ref: DocumentReference.yaml
  templatePointers:
    id: /relatesTo/-/target/reference
  templateRequired:
  - id
properties:
  _date:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``date``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _docStatus:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``docStatus``.
  _implicitRules:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``implicitRules``.
  _language:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
  _status:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``status``.
  _version:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``version``.
  attester:
    description: A participant who has authenticated the accuracy of the document.
    element_property: true
    items:
      $ref: DocumentReferenceAttester.yaml
    title: Attests to accuracy of the document
    type: array
  author:
    backref: author_document_reference
    description: Identifies who is responsible for adding the information to the document.
    element_property: true
    enum_reference_types:
    - Practitioner
    - PractitionerRole
    - Organization
    - Device
    - Patient
    - RelatedPerson
    - CareTeam
    items:
      $ref: Reference.yaml
    title: Who and/or what authored the document
    type: array
  basedOn:
    backref: basedOn_document_reference
    description: A procedure that is fulfilled in whole or in part by the creation
      of this media.
    element_property: true
    enum_reference_types:
    - Appointment
    - AppointmentResponse
    - CarePlan
    - Claim
    - CommunicationRequest
    - Contract
    - CoverageEligibilityRequest
    - DeviceRequest
    - EnrollmentRequest
    - ImmunizationRecommendation
    - MedicationRequest
    - NutritionOrder
    - RequestOrchestration
    - ServiceRequest
    - SupplyRequest
    - VisionPrescription
    items:
      $ref: Reference.yaml
    title: Procedure that caused this media to be created
    type: array
  bodySite:
    backref: bodySite_document_reference
    binding_description: SNOMED CT Body site concepts
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/body-site
    binding_version: null
    description: The anatomic structures included in the document.
    element_property: true
    enum_reference_types:
    - BodyStructure
    items:
      $ref: CodeableReference.yaml
    title: Body part included
    type: array
  category:
    binding_description: High-level kind of document at a macro level.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/referenced-item-category
    binding_version: null
    description: A categorization for the type of document referenced - helps for
      indexing and searching. This may be implied by or derived from the code specified
      in the DocumentReference.type.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Categorization of document
    type: array
  contained:
    description: These resources do not have an independent existence apart from the
      resource that contains them - they cannot be identified independently, nor can
      they have their own independent transaction scope. This is allowed to be a Parameters
      resource if and only if it is referenced by a resource that provides context/meaning.
    element_property: true
    items:
      $ref: Resource.yaml
    title: Contained, inline Resources
    type: array
  content:
    description: The document and format referenced.  If there are multiple content
      element repetitions, these must all represent the same document in different
      format, or attachment metadata.
    element_property: true
    items:
      $ref: DocumentReferenceContent.yaml
    title: Document referenced
    type: array
  context:
    backref: context_document_reference
    description: Describes the clinical encounter or type of care that the document
      content is associated with.
    element_property: true
    enum_reference_types:
    - Appointment
    - Encounter
    - EpisodeOfCare
    items:
      $ref: Reference.yaml
    title: Context of the document content
    type: array
  custodian:
    $ref: Reference.yaml
    backref: custodian_document_reference
    description: Identifies the organization or group who is responsible for ongoing
      maintenance of and access to the document.
    element_property: true
    enum_reference_types:
    - Organization
    title: Organization which maintains the document
  date:
    description: When the document reference was created.
    element_property: true
    format: date-time
    title: When this document reference was created
    type: string
  description:
    description: Human-readable description of the source document.
    element_property: true
    pattern: \s*(\S|\s)*
    title: Human-readable description
    type: string
  docStatus:
    binding_description: Status of the underlying document.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/composition-status
    binding_version: 5.0.0
    description: The status of the underlying document.
    element_property: true
    enum_values:
    - registered
    - partial
    - preliminary
    - final
    - amended
    - corrected
    - appended
    - cancelled
    - entered-in-error
    - deprecated
    - unknown
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: registered | partial | preliminary | final | amended | corrected | appended
      | cancelled | entered-in-error | deprecated | unknown
    type: string
  event:
    backref: event_document_reference
    binding_description: This list of codes represents the main clinical acts being
      documented.
    binding_strength: example
    binding_uri: http://terminology.hl7.org/ValueSet/v3-ActCode
    binding_version: null
    description: This list of codes represents the main clinical acts, such as a colonoscopy
      or an appendectomy, being documented. In some cases, the event is inherent in
      the type Code, such as a "History and Physical Report" in which the procedure
      being documented is necessarily a "History and Physical" act.
    element_property: true
    items:
      $ref: CodeableReference.yaml
    title: Main clinical acts documented
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource. To make the use of extensions safe
      and managable, there is a strict set of governance applied to the definition
      and use of extensions. Though any implementer can define an extension, there
      is a set of requirements that SHALL be met as part of the definition of the
      extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  facilityType:
    $ref: CodeableConcept.yaml
    binding_description: XDS Facility Type.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/c80-facilitycodes
    binding_version: null
    description: The kind of facility where the patient was seen.
    element_property: true
    title: Kind of facility where patient was seen
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: The logical id of the resource, as used in the URL for the resource.
      Once assigned, this value never changes.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Logical id of this artifact
    type: string
  identifier:
    description: Other business identifiers associated with the document, including
      version independent identifiers.
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Business identifiers for the document
    type: array
  implicitRules:
    description: A reference to a set of rules that were followed when the resource
      was constructed, and which must be understood when processing the content. Often,
      this is a reference to an implementation guide that defines the special rules
      along with other profiles etc.
    element_property: true
    pattern: \S*
    title: A set of rules under which this content was created
    type: string
  language:
    binding_description: IETF language tag for a human language
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/all-languages
    binding_version: 5.0.0
    description: The base language in which the resource is written.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Language of the resource content
    type: string
  links:
    items:
      $ref: https://json-schema.org/draft/2020-12/links
    type: array
  meta:
    $ref: Meta.yaml
    description: The metadata about the resource. This is content that is maintained
      by the infrastructure. Changes to the content might not always be associated
      with version changes to the resource.
    element_property: true
    title: Metadata about the resource
  modality:
    binding_description: Type of acquired data in the instance.
    binding_strength: extensible
    binding_uri: http://dicom.nema.org/medical/dicom/current/output/chtml/part16/sect_CID_33.html
    binding_version: null
    description: Imaging modality used. This may include both acquisition and non-acquisition
      modalities.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Imaging modality used
    type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource and that modifies the understanding
      of the element that contains it and/or the understanding of the containing element's
      descendants. Usually modifier elements provide negation or qualification. To
      make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer is allowed
      to define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored
    type: array
  period:
    $ref: Period.yaml
    description: The time period over which the service that is described by the document
      was provided.
    element_property: true
    title: Time of service that is being documented
  practiceSetting:
    $ref: CodeableConcept.yaml
    binding_description: Additional details about where the content was created (e.g.
      clinical specialty).
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/c80-practice-codes
    binding_version: null
    description: This property may convey specifics about the practice setting where
      the content was created, often reflecting the clinical specialty.
    element_property: true
    title: Additional details about where the content was created (e.g. clinical specialty)
  relatesTo:
    description: Relationships that this document has with other document references
      that already exist.
    element_property: true
    items:
      $ref: DocumentReferenceRelatesTo.yaml
    title: Relationships to other documents
    type: array
  resourceType:
    const: DocumentReference
    default: DocumentReference
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  securityLabel:
    binding_description: Example Security Labels from the Healthcare Privacy and Security
      Classification System.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/security-label-examples
    binding_version: null
    description: 'A set of Security-Tag codes specifying the level of privacy/security
      of the Document found at DocumentReference.content.attachment.url. Note that
      DocumentReference.meta.security contains the security labels of the data elements
      in DocumentReference, while DocumentReference.securityLabel contains the security
      labels for the document the reference refers to. The distinction recognizes
      that the document may contain sensitive information, while the DocumentReference
      is metadata about the document and thus might not be as sensitive as the document.
      For example: a psychotherapy episode may contain highly sensitive information,
      while the metadata may simply indicate that some episode happened.'
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: Document security-tags
    type: array
  status:
    binding_description: The status of the document reference.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/document-reference-status
    binding_version: 5.0.0
    description: The status of this document reference.
    element_property: true
    element_required: true
    enum_values:
    - current
    - superseded
    - entered-in-error
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: current | superseded | entered-in-error
    type: string
  subject:
    $ref: Reference.yaml
    backref: document_reference
    description: Who or what the document is about. The document can be about a person,
      (patient or healthcare practitioner), a device (e.g. a machine) or even a group
      of subjects (such as a document about a herd of farm animals, or a set of patients
      that share a common exposure).
    element_property: true
    enum_reference_types:
    - Organization
    - Group
    - Practitioner
    - PractitionerRole
    - ResearchStudy
    - Patient
    - ResearchSubject
    - Substance
    - SubstanceDefinition
    - Specimen
    - Observation
    - DiagnosticReport
    - Condition
    - Medication
    - MedicationAdministration
    - MedicationStatement
    - MedicationRequest
    - Procedure
    - DocumentReference
    - Task
    - ImagingStudy
    - FamilyMemberHistory
    - BodyStructure
    title: Who/what is the subject of the document
  text:
    $ref: Narrative.yaml
    description: A human-readable narrative that contains a summary of the resource
      and can be used to represent the content of the resource to a human. The narrative
      need not encode all the structured data, but is required to contain sufficient
      detail to make it "clinically safe" for a human to just read the narrative.
      Resource definitions may define what content should be represented in the narrative
      to ensure clinical safety.
    element_property: true
    title: Text summary of the resource, for human interpretation
  type:
    $ref: CodeableConcept.yaml
    binding_description: Precise type of clinical document.
    binding_strength: preferred
    binding_uri: http://hl7.org/fhir/ValueSet/doc-typecodes
    binding_version: null
    description: Specifies the particular kind of document referenced  (e.g. History
      and Physical, Discharge Summary, Progress Note). This usually equates to the
      purpose of making the document referenced.
    element_property: true
    title: Kind of document (LOINC if possible)
  version:
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: An explicitly assigned identifer of a variation of the content in the DocumentReference
    type: string
required:
- content
title: DocumentReference
type: object
