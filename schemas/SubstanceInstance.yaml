additionalProperties: false
description: 'Disclaimer: Any field name ends with ``__ext`` doesn''t part of

  Resource StructureDefinition, instead used to enable Extensibility feature

  for FHIR Primitive Data Types.

  If this describes a specific package/container of the substance.

  Substance may be used to describe a kind of substance, or a specific

  package/container of the substance: an instance.'
id: SubstanceInstance
properties:
  _expiry:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``expiry``.
  expiry:
    description: When the substance is no longer valid to use. For some substances,
      a single arbitrary date is used for expiry.
    element_property: true
    format: date-time
    title: When no longer valid to use
    type: string
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      manageable, there is a strict set of governance  applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  identifier:
    $ref: Identifier.yaml
    description: Identifier associated with the package/container (usually a label
      affixed directly).
    element_property: true
    title: Identifier of the package/container
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and manageable, there is a strict set of
      governance applied to the definition and use of extensions. Though any implementer
      can define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  quantity:
    $ref: Quantity.yaml
    description: The amount of the substance.
    element_property: true
    title: Amount of substance in the package
  resourceType:
    const: SubstanceInstance
    default: SubstanceInstance
    title: Resource Type
    type: string
title: SubstanceInstance
type: object
