additionalProperties: false
description: 'Disclaimer: Any field name ends with ``__ext`` doesn''t part of

  Resource StructureDefinition, instead used to enable Extensibility feature

  for FHIR Primitive Data Types.

  Direct container of specimen (tube/slide, etc.).

  The container holding the specimen.  The recursive nature of containers;

  i.e. blood in tube in tray in rack is not addressed here.'
id: SpecimenContainer
properties:
  device:
    $ref: Reference.yaml
    description: 'The device resource for the the container holding the specimen.
      If the container is in a holder then the referenced device will point to a parent
      device. Note: following not in scope, see config.dependency_order. Device'
    element_property: true
    title: Device resource for the container
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  location:
    $ref: Reference.yaml
    description: 'The location of the container holding the specimen. Note: following
      not in scope, see config.dependency_order. Location'
    element_property: true
    title: Where the container is
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  resourceType:
    const: SpecimenContainer
    default: SpecimenContainer
    title: Resource Type
    type: string
  specimenQuantity:
    $ref: Quantity.yaml
    description: The quantity of specimen in the container; may be volume, dimensions,
      or other appropriate measurements, depending on the specimen type.
    element_property: true
    title: Quantity of specimen within container
required:
- device
title: SpecimenContainer
type: object
