$id: ImagingStudy
additionalProperties: false
description: A set of images produced in single study (one or more series of references
  images). Representation of the content produced in a DICOM imaging study. A study
  comprises a set of series, each of which includes a set of Service-Object Pair Instances
  (SOP Instances - images or other data) acquired or produced in a common context.  A
  series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may
  have multiple series of different modalities. [See https://hl7.org/fhir/R5/ImagingStudy.html]
links:
- href: '{id}'
  rel: basedOn_Task
  targetHints:
    backref:
    - basedOn_imaging_study
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - Task/*
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /basedOn/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: partOf
  targetHints:
    backref:
    - partOf_imaging_study
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - Procedure/*
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /partOf/-/reference
  templateRequired:
  - id
- href: '{id}'
  rel: referrer_Practitioner
  targetHints:
    backref:
    - imaging_study
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /referrer/reference
  templateRequired:
  - id
- href: '{id}'
  rel: referrer_PractitionerRole
  targetHints:
    backref:
    - imaging_study
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /referrer/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Patient
  targetHints:
    backref:
    - imaging_study
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- href: '{id}'
  rel: subject_Group
  targetHints:
    backref:
    - imaging_study
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /subject/reference
  templateRequired:
  - id
- $comment: From Annotation/note
  href: '{id}'
  rel: note_authorReference_Practitioner
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- $comment: From Annotation/note
  href: '{id}'
  rel: note_authorReference_PractitionerRole
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- $comment: From Annotation/note
  href: '{id}'
  rel: note_authorReference_Patient
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- $comment: From Annotation/note
  href: '{id}'
  rel: note_authorReference_Organization
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Organization
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Practitioner
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_PractitionerRole
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_ResearchStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchStudy/*
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Patient
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_ResearchSubject
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchSubject/*
  targetSchema:
    $ref: ResearchSubject.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Substance
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Substance/*
  targetSchema:
    $ref: Substance.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Specimen
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Observation
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Observation/*
  targetSchema:
    $ref: Observation.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_DiagnosticReport
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DiagnosticReport/*
  targetSchema:
    $ref: DiagnosticReport.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Condition
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Condition/*
  targetSchema:
    $ref: Condition.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Medication
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Medication/*
  targetSchema:
    $ref: Medication.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_MedicationAdministration
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationAdministration/*
  targetSchema:
    $ref: MedicationAdministration.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_MedicationStatement
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationStatement/*
  targetSchema:
    $ref: MedicationStatement.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_MedicationRequest
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationRequest/*
  targetSchema:
    $ref: MedicationRequest.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Procedure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Procedure/*
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_DocumentReference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DocumentReference/*
  targetSchema:
    $ref: DocumentReference.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Task
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Task/*
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_ImagingStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ImagingStudy/*
  targetSchema:
    $ref: ImagingStudy.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_FamilyMemberHistory
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - FamilyMemberHistory/*
  targetSchema:
    $ref: FamilyMemberHistory.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_BodyStructure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - BodyStructure/*
  targetSchema:
    $ref: BodyStructure.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/procedure
  href: '{id}'
  rel: procedure_reference_Group
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /procedure/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Organization
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Practitioner
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_PractitionerRole
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_ResearchStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchStudy/*
  targetSchema:
    $ref: ResearchStudy.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Patient
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_ResearchSubject
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ResearchSubject/*
  targetSchema:
    $ref: ResearchSubject.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Substance
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Substance/*
  targetSchema:
    $ref: Substance.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Specimen
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Observation
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Observation/*
  targetSchema:
    $ref: Observation.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_DiagnosticReport
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DiagnosticReport/*
  targetSchema:
    $ref: DiagnosticReport.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Condition
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Condition/*
  targetSchema:
    $ref: Condition.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Medication
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Medication/*
  targetSchema:
    $ref: Medication.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_MedicationAdministration
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationAdministration/*
  targetSchema:
    $ref: MedicationAdministration.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_MedicationStatement
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationStatement/*
  targetSchema:
    $ref: MedicationStatement.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_MedicationRequest
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - MedicationRequest/*
  targetSchema:
    $ref: MedicationRequest.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Procedure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Procedure/*
  targetSchema:
    $ref: Procedure.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_DocumentReference
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - DocumentReference/*
  targetSchema:
    $ref: DocumentReference.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Task
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Task/*
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_ImagingStudy
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - ImagingStudy/*
  targetSchema:
    $ref: ImagingStudy.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_FamilyMemberHistory
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - FamilyMemberHistory/*
  targetSchema:
    $ref: FamilyMemberHistory.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_BodyStructure
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - BodyStructure/*
  targetSchema:
    $ref: BodyStructure.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From CodeableReference/reason
  href: '{id}'
  rel: reason_reference_Group
  targetHints:
    backref:
    - codeable_reference
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /reason/-/reference/reference
  templateRequired:
  - id
- $comment: From ImagingStudySeries/series
  href: '{id}'
  rel: series_specimen
  targetHints:
    backref:
    - specimen_imaging_study_series
    direction:
    - outbound
    multiplicity:
    - has_many
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /series/-/specimen/-/reference
  templateRequired:
  - id
properties:
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _implicitRules:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``implicitRules``.
  _language:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
  _numberOfInstances:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``numberOfInstances``.
  _numberOfSeries:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``numberOfSeries``.
  _started:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``started``.
  _status:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``status``.
  basedOn:
    backref: basedOn_imaging_study
    description: A list of the diagnostic requests that resulted in this imaging study
      being performed.
    element_property: true
    enum_reference_types:
    - CarePlan
    - ServiceRequest
    - Appointment
    - AppointmentResponse
    - Task
    items:
      $ref: Reference.yaml
    title: Request fulfilled
    type: array
  contained:
    description: These resources do not have an independent existence apart from the
      resource that contains them - they cannot be identified independently, nor can
      they have their own independent transaction scope. This is allowed to be a Parameters
      resource if and only if it is referenced by a resource that provides context/meaning.
    element_property: true
    items:
      $ref: Resource.yaml
    title: Contained, inline Resources
    type: array
  description:
    description: The Imaging Manager description of the study. Institution-generated
      description or classification of the Study (component) performed.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Institution-generated description
    type: string
  encounter:
    $ref: Reference.yaml
    backref: imaging_study
    description: The healthcare event (e.g. a patient and healthcare provider interaction)
      during which this ImagingStudy is made.
    element_property: true
    enum_reference_types:
    - Encounter
    title: Encounter with which this imaging study is associated
  endpoint:
    backref: endpoint_imaging_study
    description: The network service providing access (e.g., query, view, or retrieval)
      for the study. See implementation notes for information about using DICOM endpoints.
      A study-level endpoint applies to each series in the study, unless overridden
      by a series-level endpoint with the same Endpoint.connectionType.
    element_property: true
    enum_reference_types:
    - Endpoint
    items:
      $ref: Reference.yaml
    title: Study access endpoint
    type: array
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource. To make the use of extensions safe
      and managable, there is a strict set of governance applied to the definition
      and use of extensions. Though any implementer can define an extension, there
      is a set of requirements that SHALL be met as part of the definition of the
      extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: The logical id of the resource, as used in the URL for the resource.
      Once assigned, this value never changes.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Logical id of this artifact
    type: string
  identifier:
    description: Identifiers for the ImagingStudy such as DICOM Study Instance UID.
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Identifiers for the whole study
    type: array
  implicitRules:
    description: A reference to a set of rules that were followed when the resource
      was constructed, and which must be understood when processing the content. Often,
      this is a reference to an implementation guide that defines the special rules
      along with other profiles etc.
    element_property: true
    pattern: \S*
    title: A set of rules under which this content was created
    type: string
  language:
    binding_description: IETF language tag for a human language
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/all-languages
    binding_version: 5.0.0
    description: The base language in which the resource is written.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Language of the resource content
    type: string
  links:
    items:
      $ref: https://json-schema.org/draft/2020-12/links
    type: array
  location:
    $ref: Reference.yaml
    backref: imaging_study
    description: The principal physical location where the ImagingStudy was performed.
    element_property: true
    enum_reference_types:
    - Location
    title: Where ImagingStudy occurred
  meta:
    $ref: Meta.yaml
    description: The metadata about the resource. This is content that is maintained
      by the infrastructure. Changes to the content might not always be associated
      with version changes to the resource.
    element_property: true
    title: Metadata about the resource
  modality:
    binding_description: Type of acquired data in the instance.
    binding_strength: extensible
    binding_uri: http://dicom.nema.org/medical/dicom/current/output/chtml/part16/sect_CID_33.html
    binding_version: null
    description: A list of all the distinct values of series.modality. This may include
      both acquisition and non-acquisition modalities.
    element_property: true
    items:
      $ref: CodeableConcept.yaml
    title: All of the distinct values for series' modalities
    type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource and that modifies the understanding
      of the element that contains it and/or the understanding of the containing element's
      descendants. Usually modifier elements provide negation or qualification. To
      make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer is allowed
      to define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored
    type: array
  note:
    description: Per the recommended DICOM mapping, this element is derived from the
      Study Description attribute (0008,1030). Observations or findings about the
      imaging study should be recorded in another resource, e.g. Observation, and
      not in this element.
    element_property: true
    items:
      $ref: Annotation.yaml
    title: User-defined comments
    type: array
  numberOfInstances:
    description: Number of SOP Instances in Study. This value given may be larger
      than the number of instance elements this resource contains due to resource
      availability, security, or other factors. This element should be present if
      any instance elements are present.
    element_property: true
    minimum: 0
    title: Number of Study Related Instances
    type: integer
  numberOfSeries:
    description: Number of Series in the Study. This value given may be larger than
      the number of series elements this Resource contains due to resource availability,
      security, or other factors. This element should be present if any series elements
      are present.
    element_property: true
    minimum: 0
    title: Number of Study Related Series
    type: integer
  partOf:
    backref: partOf_imaging_study
    description: A larger event of which this particular ImagingStudy is a component
      or step.  For example,  an ImagingStudy as part of a procedure.
    element_property: true
    enum_reference_types:
    - Procedure
    items:
      $ref: Reference.yaml
    title: Part of referenced event
    type: array
  procedure:
    backref: procedure_imaging_study
    binding_description: Use of RadLex is preferred
    binding_strength: preferred
    binding_uri: http://loinc.org/vs/loinc-rsna-radiology-playbook
    binding_version: null
    description: This field corresponds to the DICOM Procedure Code Sequence (0008,1032).
      This is different from the FHIR Procedure resource that may include the ImagingStudy.
    element_property: true
    enum_reference_types:
    - PlanDefinition
    - ActivityDefinition
    items:
      $ref: CodeableReference.yaml
    title: The performed procedure or code
    type: array
  reason:
    backref: reason_imaging_study
    binding_description: The reason for the study.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/procedure-reason
    binding_version: null
    description: Description of clinical condition indicating why the ImagingStudy
      was requested, and/or Indicates another resource whose existence justifies this
      Study.
    element_property: true
    enum_reference_types:
    - Condition
    - Observation
    - DiagnosticReport
    - DocumentReference
    items:
      $ref: CodeableReference.yaml
    title: Why the study was requested / performed
    type: array
  referrer:
    $ref: Reference.yaml
    backref: imaging_study
    description: The requesting/referring physician.
    element_property: true
    enum_reference_types:
    - Practitioner
    - PractitionerRole
    title: Referring physician
  resourceType:
    const: ImagingStudy
    default: ImagingStudy
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  series:
    description: Each study has one or more series of images or other content.
    element_property: true
    items:
      $ref: ImagingStudySeries.yaml
    title: Each study has one or more series of instances
    type: array
  started:
    description: Date and time the study started.
    element_property: true
    format: date-time
    title: When the study was started
    type: string
  status:
    binding_description: The status of the ImagingStudy.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/imagingstudy-status
    binding_version: 5.0.0
    description: The current state of the ImagingStudy resource. This is not the status
      of any ServiceRequest or Task resources associated with the ImagingStudy.
    element_property: true
    element_required: true
    enum_values:
    - registered
    - available
    - cancelled
    - entered-in-error
    - unknown
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: registered | available | cancelled | entered-in-error | unknown
    type: string
  subject:
    $ref: Reference.yaml
    backref: imaging_study
    description: The subject, typically a patient, of the imaging study.
    element_property: true
    enum_reference_types:
    - Patient
    - Device
    - Group
    title: Who or what is the subject of the study
  text:
    $ref: Narrative.yaml
    description: A human-readable narrative that contains a summary of the resource
      and can be used to represent the content of the resource to a human. The narrative
      need not encode all the structured data, but is required to contain sufficient
      detail to make it "clinically safe" for a human to just read the narrative.
      Resource definitions may define what content should be represented in the narrative
      to ensure clinical safety.
    element_property: true
    title: Text summary of the resource, for human interpretation
required:
- subject
title: ImagingStudy
type: object
