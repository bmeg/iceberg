$id: Task
additionalProperties: false
description: A task to be performed. [See https://hl7.org/fhir/R5/Task.html]
links:
- href: Resource/{id}
  rel: basedOn
  targetHints:
    backref:
    - basedOn_task
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /basedOn/-/reference
  templateRequired:
  - id
- href: Resource/{id}
  rel: focus
  targetHints:
    backref:
    - focus_task
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /focus/reference
  templateRequired:
  - id
- href: Resource/{id}
  rel: for_fhir
  targetHints:
    backref:
    - for_task
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Resource.yaml
  templatePointers:
    id: /for_fhir/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: owner_Patient
  targetHints:
    backref:
    - owner_task
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /owner/reference
  templateRequired:
  - id
- href: Task/{id}
  rel: partOf
  targetHints:
    backref:
    - partOf_task
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Task.yaml
  templatePointers:
    id: /partOf/-/reference
  templateRequired:
  - id
- href: Patient/{id}
  rel: requester_Patient
  targetHints:
    backref:
    - requester_task
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /requester/reference
  templateRequired:
  - id
- $comment: From Annotation/note
  href: Patient/{id}
  rel: note_authorReference_Patient
  targetHints:
    backref:
    - annotation
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /note/-/authorReference/reference
  templateRequired:
  - id
- $comment: From TaskPerformer/performer
  href: Patient/{id}
  rel: performer_actor_Patient
  targetHints:
    backref:
    - task_performer
    direction:
    - outbound
    multiplicity:
    - has_one
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /performer/-/actor/reference
  templateRequired:
  - id
- $comment: From TaskRestriction/restriction
  href: Patient/{id}
  rel: restriction_recipient_Patient
  targetHints:
    backref:
    - recipient_task_restriction
    direction:
    - outbound
    multiplicity:
    - has_many
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /restriction/recipient/-/reference
  templateRequired:
  - id
properties:
  _authoredOn:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``authoredOn``.
  _description:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``description``.
  _doNotPerform:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``doNotPerform``.
  _implicitRules:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``implicitRules``.
  _instantiatesCanonical:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``instantiatesCanonical``.
  _instantiatesUri:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``instantiatesUri``.
  _intent:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``intent``.
  _language:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``language``.
  _lastModified:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``lastModified``.
  _priority:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``priority``.
  _status:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``status``.
  authoredOn:
    description: The date and time this task was created.
    element_property: true
    format: date-time
    title: Task Creation Date
    type: string
  basedOn:
    backref: basedOn_task
    description: BasedOn refers to a higher-level authorization that triggered the
      creation of the task.  It references a "request" resource such as a ServiceRequest,
      MedicationRequest, CarePlan, etc. which is distinct from the "request" resource
      the task is seeking to fulfill.  This latter resource is referenced by focus.  For
      example, based on a CarePlan (= basedOn), a task is created to fulfill a ServiceRequest
      ( = focus ) to collect a specimen from a patient.
    element_property: true
    enum_reference_types:
    - Resource
    items:
      $ref: Reference.yaml
    title: Request fulfilled by this task
    type: array
  businessStatus:
    $ref: CodeableConcept.yaml
    description: Contains business-specific nuances of the business state.
    element_property: true
    title: E.g. "Specimen collected", "IV prepped"
  code:
    $ref: CodeableConcept.yaml
    binding_description: Codes to identify what the task involves.  These will typically
      be specific to a particular workflow.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/task-code
    binding_version: null
    description: A name or code (or both) briefly describing what the task involves.
    element_property: true
    title: Task Type
  contained:
    description: These resources do not have an independent existence apart from the
      resource that contains them - they cannot be identified independently, nor can
      they have their own independent transaction scope. This is allowed to be a Parameters
      resource if and only if it is referenced by a resource that provides context/meaning.
    element_property: true
    items:
      $ref: Resource.yaml
    title: Contained, inline Resources
    type: array
  description:
    description: A free-text description of what is to be performed.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Human-readable explanation of task
    type: string
  doNotPerform:
    description: If true indicates that the Task is asking for the specified action
      to *not* occur.
    element_property: true
    title: True if Task is prohibiting action
    type: boolean
  encounter:
    $ref: Reference.yaml
    backref: task
    description: The healthcare event  (e.g. a patient and healthcare provider interaction)
      during which this task was created.
    element_property: true
    enum_reference_types:
    - Encounter
    title: Healthcare event during which this task originated
  executionPeriod:
    $ref: Period.yaml
    description: Identifies the time action was first taken against the task (start)
      and/or the time final action was taken against the task prior to marking it
      as completed (end).
    element_property: true
    title: Start and end time of execution
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource. To make the use of extensions safe
      and managable, there is a strict set of governance applied to the definition
      and use of extensions. Though any implementer can define an extension, there
      is a set of requirements that SHALL be met as part of the definition of the
      extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  focus:
    $ref: Reference.yaml
    backref: focus_task
    description: The request being fulfilled or the resource being manipulated (changed,
      suspended, etc.) by this task.
    element_property: true
    enum_reference_types:
    - Resource
    title: What task is acting on
  for_fhir:
    $ref: Reference.yaml
    backref: for_task
    description: '[Reserved word `for` renamed to `for_fhir`] The entity who benefits
      from the performance of the service specified in the task (e.g., the patient).'
    element_property: true
    enum_reference_types:
    - Resource
    title: Beneficiary of the Task
  groupIdentifier:
    $ref: Identifier.yaml
    description: A shared identifier common to multiple independent Task and Request
      instances that were activated/authorized more or less simultaneously by a single
      author.  The presence of the same identifier on each request ties those requests
      together and may have business ramifications in terms of reporting of results,
      billing, etc.  E.g. a requisition number shared by a set of lab tests ordered
      together, or a prescription number shared by all meds ordered at one time.
    element_property: true
    title: Requisition or grouper id
  id:
    description: The logical id of the resource, as used in the URL for the resource.
      Once assigned, this value never changes.
    element_property: true
    maxLength: 64
    minLength: 1
    pattern: ^[A-Za-z0-9\-.]+$
    title: Logical id of this artifact
    type: string
  identifier:
    description: The business identifier for this task.
    element_property: true
    items:
      $ref: Identifier.yaml
    title: Task Instance Identifier
    type: array
  implicitRules:
    description: A reference to a set of rules that were followed when the resource
      was constructed, and which must be understood when processing the content. Often,
      this is a reference to an implementation guide that defines the special rules
      along with other profiles etc.
    element_property: true
    pattern: \S*
    title: A set of rules under which this content was created
    type: string
  input:
    description: Additional information that may be needed in the execution of the
      task.
    element_property: true
    items:
      $ref: TaskInput.yaml
    title: Information used to perform task
    type: array
  instantiatesCanonical:
    description: The URL pointing to a *FHIR*-defined protocol, guideline, orderset
      or other definition that is adhered to in whole or in part by this Task.
    element_property: true
    enum_reference_types:
    - ActivityDefinition
    pattern: \S*
    title: Formal definition of task
    type: string
  instantiatesUri:
    description: The URL pointing to an *externally* maintained  protocol, guideline,
      orderset or other definition that is adhered to in whole or in part by this
      Task.
    element_property: true
    pattern: \S*
    title: Formal definition of task
    type: string
  insurance:
    backref: insurance_task
    description: Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations
      that may be relevant to the Task.
    element_property: true
    enum_reference_types:
    - Coverage
    - ClaimResponse
    items:
      $ref: Reference.yaml
    title: Associated insurance coverage
    type: array
  intent:
    binding_description: Distinguishes whether the task is a proposal, plan or full
      order.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/task-intent
    binding_version: 5.0.0
    description: Indicates the "level" of actionability associated with the Task,
      i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.
    element_property: true
    element_required: true
    enum_values:
    - unknown
    - proposal
    - plan
    - order
    - original-order
    - reflex-order
    - filler-order
    - instance-order
    - option
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: unknown | proposal | plan | order | original-order | reflex-order | filler-order
      | instance-order | option
    type: string
  language:
    binding_description: IETF language tag for a human language
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/all-languages
    binding_version: 5.0.0
    description: The base language in which the resource is written.
    element_property: true
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: Language of the resource content
    type: string
  lastModified:
    description: The date and time of last modification to this task.
    element_property: true
    format: date-time
    title: Task Last Modified Date
    type: string
  links:
    items:
      $ref: https://json-schema.org/draft/2020-12/links
    type: array
  location:
    $ref: Reference.yaml
    backref: task
    description: Principal physical location where this task is performed.
    element_property: true
    enum_reference_types:
    - Location
    title: Where task occurs
  meta:
    $ref: Meta.yaml
    description: The metadata about the resource. This is content that is maintained
      by the infrastructure. Changes to the content might not always be associated
      with version changes to the resource.
    element_property: true
    title: Metadata about the resource
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the resource and that modifies the understanding
      of the element that contains it and/or the understanding of the containing element's
      descendants. Usually modifier elements provide negation or qualification. To
      make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer is allowed
      to define an extension, there is a set of requirements that SHALL be met as
      part of the definition of the extension. Applications processing a resource
      are required to check for modifier extensions.  Modifier extensions SHALL NOT
      change the meaning of any elements on Resource or DomainResource (including
      cannot change the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored
    type: array
  note:
    description: Free-text information captured about the task as it progresses.
    element_property: true
    items:
      $ref: Annotation.yaml
    title: Comments made about the task
    type: array
  output:
    description: Outputs produced by the Task.
    element_property: true
    items:
      $ref: TaskOutput.yaml
    title: Information produced as part of task
    type: array
  owner:
    $ref: Reference.yaml
    backref: owner_task
    description: Party responsible for managing task execution.
    element_property: true
    enum_reference_types:
    - Practitioner
    - PractitionerRole
    - Organization
    - CareTeam
    - Patient
    - RelatedPerson
    title: Responsible individual
  partOf:
    backref: partOf_task
    description: Task that this particular task is part of.
    element_property: true
    enum_reference_types:
    - Task
    items:
      $ref: Reference.yaml
    title: Composite task
    type: array
  performer:
    description: The entity who performed the requested task.
    element_property: true
    items:
      $ref: TaskPerformer.yaml
    title: Who or what performed the task
    type: array
  priority:
    binding_description: The priority of a task (may affect service level applied
      to the task).
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/request-priority
    binding_version: 5.0.0
    description: Indicates how quickly the Task should be addressed with respect to
      other requests.
    element_property: true
    enum_values:
    - routine
    - urgent
    - asap
    - stat
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: routine | urgent | asap | stat
    type: string
  reason:
    backref: reason_task
    description: A description, code, or reference indicating why this task needs
      to be performed.
    element_property: true
    items:
      $ref: CodeableReference.yaml
    title: Why task is needed
    type: array
  relevantHistory:
    backref: relevantHistory_task
    description: Links to Provenance records for past versions of this Task that identify
      key state transitions or updates that are likely to be relevant to a user looking
      at the current version of the task.
    element_property: true
    enum_reference_types:
    - Provenance
    items:
      $ref: Reference.yaml
    title: Key events in history of the Task
    type: array
  requestedPerformer:
    backref: requestedPerformer_task
    binding_description: The type(s) of task performers allowed.
    binding_strength: preferred
    binding_uri: http://hl7.org/fhir/ValueSet/performer-role
    binding_version: null
    description: The kind of participant or specific participant that should perform
      the task.
    element_property: true
    enum_reference_types:
    - Practitioner
    - PractitionerRole
    - Organization
    - CareTeam
    - HealthcareService
    - Patient
    - Device
    - RelatedPerson
    items:
      $ref: CodeableReference.yaml
    title: Who should perform Task
    type: array
  requestedPeriod:
    $ref: Period.yaml
    description: Indicates the start and/or end of the period of time when completion
      of the task is desired to take place.
    element_property: true
    title: When the task should be performed
  requester:
    $ref: Reference.yaml
    backref: requester_task
    description: The creator of the task.
    element_property: true
    enum_reference_types:
    - Device
    - Organization
    - Patient
    - Practitioner
    - PractitionerRole
    - RelatedPerson
    title: Who is asking for task to be done
  resourceType:
    const: Task
    default: Task
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
  restriction:
    $ref: TaskRestriction.yaml
    description: If the Task.focus is a request resource and the task is seeking fulfillment
      (i.e. is asking for the request to be actioned), this element identifies any
      limitations on what parts of the referenced request should be actioned.
    element_property: true
    title: Constraints on fulfillment tasks
  status:
    binding_description: The current status of the task.
    binding_strength: required
    binding_uri: http://hl7.org/fhir/ValueSet/task-status
    binding_version: 5.0.0
    description: The current status of the task.
    element_property: true
    element_required: true
    enum_values:
    - draft
    - requested
    - received
    - accepted
    - +
    pattern: ^[^\s]+(\s[^\s]+)*$
    title: draft | requested | received | accepted | +
    type: string
  statusReason:
    $ref: CodeableReference.yaml
    backref: task
    binding_description: Codes to identify the reason for current status.  These will
      typically be specific to a particular workflow.
    binding_strength: example
    binding_uri: http://hl7.org/fhir/ValueSet/task-status-reason
    binding_version: null
    description: An explanation as to why this task is held, failed, was refused,
      etc.
    element_property: true
    title: Reason for current status
  text:
    $ref: Narrative.yaml
    description: A human-readable narrative that contains a summary of the resource
      and can be used to represent the content of the resource to a human. The narrative
      need not encode all the structured data, but is required to contain sufficient
      detail to make it "clinically safe" for a human to just read the narrative.
      Resource definitions may define what content should be represented in the narrative
      to ensure clinical safety.
    element_property: true
    title: Text summary of the resource, for human interpretation
title: Task
type: object
