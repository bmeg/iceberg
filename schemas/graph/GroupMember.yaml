$id: GroupMember
additionalProperties: false
description: Who or what is in group. Identifies the resource instances that are members
  of the group. [See https://hl7.org/fhir/R5/GroupMember.html]
links:
- href: '{id}'
  rel: entity_Group
  targetHints:
    backref:
    - group_member
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Group/*
  targetSchema:
    $ref: Group.yaml
  templatePointers:
    id: /entity/reference
  templateRequired:
  - id
- href: '{id}'
  rel: entity_Organization
  targetHints:
    backref:
    - group_member
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Organization/*
  targetSchema:
    $ref: Organization.yaml
  templatePointers:
    id: /entity/reference
  templateRequired:
  - id
- href: '{id}'
  rel: entity_Patient
  targetHints:
    backref:
    - group_member
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Patient/*
  targetSchema:
    $ref: Patient.yaml
  templatePointers:
    id: /entity/reference
  templateRequired:
  - id
- href: '{id}'
  rel: entity_Practitioner
  targetHints:
    backref:
    - group_member
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Practitioner/*
  targetSchema:
    $ref: Practitioner.yaml
  templatePointers:
    id: /entity/reference
  templateRequired:
  - id
- href: '{id}'
  rel: entity_PractitionerRole
  targetHints:
    backref:
    - group_member
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - PractitionerRole/*
  targetSchema:
    $ref: PractitionerRole.yaml
  templatePointers:
    id: /entity/reference
  templateRequired:
  - id
- href: '{id}'
  rel: entity_Specimen
  targetHints:
    backref:
    - group_member
    direction:
    - outbound
    multiplicity:
    - has_one
    regex_match:
    - Specimen/*
  targetSchema:
    $ref: Specimen.yaml
  templatePointers:
    id: /entity/reference
  templateRequired:
  - id
properties:
  _inactive:
    $ref: FHIRPrimitiveExtension.yaml
    title: Extension field for ``inactive``.
  entity:
    $ref: Reference.yaml
    backref: group_member
    description: A reference to the entity that is a member of the group. Must be
      consistent with Group.type. If the entity is another group, then the type must
      be the same.
    element_property: true
    enum_reference_types:
    - CareTeam
    - Device
    - Group
    - HealthcareService
    - Location
    - Organization
    - Patient
    - Practitioner
    - PractitionerRole
    - RelatedPerson
    - Specimen
    title: Reference to the group member
  extension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element. To make the use of extensions safe and
      managable, there is a strict set of governance applied to the definition and
      use of extensions. Though any implementer can define an extension, there is
      a set of requirements that SHALL be met as part of the definition of the extension.
    element_property: true
    items:
      $ref: Extension.yaml
    title: Additional content defined by implementations
    type: array
  fhir_comments:
    anyOf:
    - type: string
    - items:
        type: string
      type: array
    element_property: false
    title: Fhir Comments
  id:
    description: Unique id for the element within a resource (for internal references).
      This may be any string value that does not contain spaces.
    element_property: true
    pattern: '[ \r\n\t\S]+'
    title: Unique id for inter-element referencing
    type: string
  inactive:
    description: A flag to indicate that the member is no longer in the group, but
      previously may have been a member.
    element_property: true
    title: If member is no longer in group
    type: boolean
  links:
    items:
      $ref: https://json-schema.org/draft/2020-12/links
    type: array
  modifierExtension:
    description: May be used to represent additional information that is not part
      of the basic definition of the element and that modifies the understanding of
      the element in which it is contained and/or the understanding of the containing
      element's descendants. Usually modifier elements provide negation or qualification.
      To make the use of extensions safe and managable, there is a strict set of governance
      applied to the definition and use of extensions. Though any implementer can
      define an extension, there is a set of requirements that SHALL be met as part
      of the definition of the extension. Applications processing a resource are required
      to check for modifier extensions.  Modifier extensions SHALL NOT change the
      meaning of any elements on Resource or DomainResource (including cannot change
      the meaning of modifierExtension itself).
    element_property: true
    items:
      $ref: Extension.yaml
    title: Extensions that cannot be ignored even if unrecognized
    type: array
  period:
    $ref: Period.yaml
    description: The period that the member was in the group, if known.
    element_property: true
    title: Period member belonged to the group
  resourceType:
    const: GroupMember
    default: GroupMember
    description: One of the resource types defined as part of FHIR
    title: Resource Type
    type: string
required:
- entity
title: GroupMember
type: object
